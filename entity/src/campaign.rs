//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;
use uuid::Uuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "campaign")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Binary(16)")]
    pub uuid: Uuid,
    pub date: Date,
    pub created_at: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::product_campaign::Entity")]
    ProductCampaign,
}

impl Related<super::product_campaign::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductCampaign.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
