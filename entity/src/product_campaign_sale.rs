//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;
use uuid::Uuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "product_campaign_sale")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    #[sea_orm(column_type = "Decimal(Some((10, 0)))")]
    pub price: Decimal,
    pub amount: u32,
    #[sea_orm(column_type = "Binary(16)")]
    pub id_product_campaign: Uuid,
    #[sea_orm(column_type = "Binary(16)")]
    pub id_sale: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::product_campaign::Entity",
        from = "Column::IdProductCampaign",
        to = "super::product_campaign::Column::Uuid",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    ProductCampaign,
    #[sea_orm(
        belongs_to = "super::sale::Entity",
        from = "Column::IdSale",
        to = "super::sale::Column::Uuid",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Sale,
}

impl Related<super::product_campaign::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductCampaign.def()
    }
}

impl Related<super::sale::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sale.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
